Redux

Install:
    It has 2 libraries @reduxjs/toolkit & react-redux

Theory:
    The scenario is to update the 'cart' by clicking the 'add' button

    To write in store
    > When we click the 'add' button it will dispatch the action.
    > The action will dispatch the reducer function.
    > The function will update the slice in the redux store.

    To read from store
    > The cart is subscribed to the store using a selector that will automagically update the cart on changes.


    ADD -> ACTION -> FUNC -> SLICE IN THE STORE -> SELECTOR -> CART


Example. 

Suppose we want to save the user details when he logs or registers in.
1. Creating the userSlice
    import { createSlice } from "@reduxjs/toolkit";

    const initialState = {
    user: null,
    token: null,
    };

    export const userSlice = createSlice({
    name: "user",
    initialState,
    reducers: {
        setLogin: (state, action) => {
        // console.log("setLogin action payload:", action.payload);
        state.user = action.payload.user;
        state.token = action.payload.token;
        },
        setLogout: (state) => {
        state.user = null;
        state.token = null;
        },
    }
    });

    export const {
        setLogin,
        setLogout
    }


2. Saving the slice in the reducer.

3. Cliking the login button and calling the function.

4. dispatching the action in the function
    dispatch(
        setLogin({
        user: loggedIn.user,
        token: loggedIn.token,
        })
    );

5. when the name of the user was required it was called using useSelector
    const username = useSelector((state) => state?.user?.name);